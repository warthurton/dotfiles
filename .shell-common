#-----------------------------------------------------------------------------
# Aliases & Functions

#-----------------------------------------------------------------------------
[[ -s "$HOME/.shell-prv" ]] && source "$HOME/.shell-prv"

# function log2syslog
# {
#    declare COMMAND
#    COMMAND=$(fc -ln -0)
#    logger -p local1.notice -t bash -i -- "${USER}:${COMMAND}"
# }
# trap log2syslog DEBUG

# OS X ---------------------------------------------------------------------
if [[ "${OSTYPE:0:6}" = "darwin" ]] ; then
  alias ls="/bin/ls -FG"
  alias l="ls -lO"
  alias p="ps -Af"
  alias start="simple_launchctl load"
  alias stop="simple_launchctl unload"

  function simple_launchctl() {
    find ~/Library/LaunchAgents -name '*.plist' -name '*'"$2"'*' -ok launchctl "$1" -w {} \;
  }

  function flushdns() {
    dscacheutil -flushcache
    sudo killall -HUP mDNSResponder
  }
  function rebuild_launch_services {
    /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user
  }

# Linux ---------------------------------------------------------------------
elif [[ "${OSTYPE:0:5}" = "linux" ]] ; then
  command -v tty >&/dev/null && export GPG_TTY=$(tty)

  alias ls="/bin/ls --color=auto -F"
  alias l="ls -l"
  alias p="ps auxOU"
  alias ubuntu_add_key='sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80'
fi
# ---------------------------------------------------------------------------
if command -v ag >/dev/null 2>/dev/null ; then
  alias ag="ag --pager=less --color-match='1;36'"
  alias ag_next='git $(git diff --name-only master..HEAD . | sed -e "s/^/ --ignore=/")'
fi
# ---------------------------------------------------------------------------
if command -v nvim >/dev/null 2>/dev/null ; then
  alias vim=nvim
  alias v=nvim
fi
# ---------------------------------------------------------------------------
alias list_to_regex="sed -e 's/[^0-9]//g' | tr '\n' '|' | sed -e 's/^/(/' -e 's/\|$/)/'"
alias m='$PAGER'
alias l1="ls -1"
alias ll="l -A"
alias la="ls -A"
alias live_ip='dig +short myip.opendns.com @resolver1.opendns.com || curl -f4L http://ifconfig.me'
alias to_csv='soffice --convert-to csv --headless'
alias dc=docker-compose
# ---------------------------------------------------------------------------
cassette_to_json() {
  ruby -rjson -ryaml -e "puts JSON.parse(YAML.load(File.read '$1')['http_interactions'].first['response']['body']['string']).to_json" | jq '.' > "${1/yml/json}"
}

predate() {
  while read -r line ; do
    printf '%(%F %T)T %s\n' -1 "$line"
  done
}

total() {
  tr '\n' '+' | sed -e 's/^/(/' -e 's/\+$/\)/'  | bc -q
}

downloaded_in() {
  for f in "$@" ; do stat -r "$f" | awk '{print ($11 - $12) " seconds"}' ; done
}

ps_owners() {
  [[ -n "${BASH_VERSINFO[0]}" && "${BASH_VERSINFO[0]}" -lt 4 ]] && return 1
  [[ -n "${BASH_VERSINFO[1]}" && "${BASH_VERSINFO[1]}" -lt 4 ]] && return 1

  local _pid="${1:-$$}"

  [[ $_pid -eq 0 ]] && return

  read -r _uid _user _ppid _command < <(ps -o uid=,user=,ppid=,command= -p "$_pid")

  echo "$_pid $_user $_uid $_ppid \"$_command\""

  ps_owners "$_ppid"
}

am_i_someone_else() {
  [[ -n "${BASH_VERSINFO[0]}" && "${BASH_VERSINFO[0]}" -lt 4 ]] && return 1
  [[ -n "${BASH_VERSINFO[1]}" && "${BASH_VERSINFO[1]}" -lt 4 ]] && return 1

  pgrep -u 0 >&/dev/null || return 1
  [[ $EUID -eq 0 ]] && return 1

  local -a _owners
  local -A _counts

  while read -r _pid _user _uid _ppid _command ; do
    if [[ -z "${_counts[$_user]}" ]] ; then
      _owners+=("$_user")
      _counts[$_user]=1
    else
      (( _counts[$_user]++ ))
    fi
  done < <(ps_owners)

  if [[ "${#_owners[@]}" -le 2 && "${_owners[-1]}" == "root" ]] ; then
    return 1
  else
    return 0
  fi
}

# Ruby ---------------------------------------------------------------------
alias be="bundle exec"

httpd() {
  port="${1:-8000}"

  command -v open >/dev/null 2>/dev/null && (sleep 1 && open "http://127.0.0.1:$port" &)
  python -m SimpleHTTPServer "$port"
}
# Git ---------------------------------------------------------------------

if [[ -d "$HOME/.git-pub-dotfiles" ]] ; then
  function pubgit() {
    git --git-dir="$HOME/.git-pub-dotfiles" --work-tree="$HOME" "$@"
  }
fi

if [[ -d "$HOME/.git-prv-dotfiles" ]] ; then
  function prvgit() {
    git --git-dir="$HOME/.git-prv-dotfiles" --work-tree="$HOME" "$@"
  }
fi

alias g=git
alias gst='git status'
alias gco='git checkout'
alias gps='git push'
alias gpl='git pull'

#-----------------------------------------------------------------------------
[[ -z "$PS1" ]] && return
[[ "${XPC_SERVICE_NAME:0:13}" == "com.jetbrains" ]] && return  # RubyyMine etc...
#-----------------------------------------------------------------------------
[[ -s "$HOME/.base16_theme" ]] && source "$HOME/.base16_theme"
# --------------------------------------------------------------------------
# vim: set syntax=sh ft=sh sw=2 ts=2 expandtab:
